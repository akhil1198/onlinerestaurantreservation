{"ast":null,"code":"var _jsxFileName = \"/home/akhil/hotelreservation/src/components/Landing.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react'; // import { Admindashboard } from '../Components/Admindashboard';\n\nimport { AuthContext } from '../auth/AuthContext'; // Package Imports\n\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios'; // Icon & Placeholders Imports\n\nimport Reception from '../placeholders/reception.jpg';\nimport BackIcon from '../placeholders/BackIcon.png'; // Material-UI Imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { Firebase, firedb } from '../firebase';\nimport { Tab } from 'semantic-ui-react'; // Styling Landing Page\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  paper: {\n    marginTop: theme.spacing(15),\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(10)\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  heading: {\n    paddingTop: theme.spacing(3) // paddingBottom: theme.spacing(5),\n\n  },\n  buttons: {\n    width: '400px'\n  },\n  backButton: {\n    marginTop: theme.spacing(3)\n  },\n  submitButton: {\n    marginTop: theme.spacing(3)\n  },\n  textFields: {\n    marginBottom: theme.spacing(3)\n  },\n  icons: {\n    color: '#fff'\n  }\n}));\nexport const Landing = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    username: '',\n    contactNumber: '',\n    email: '',\n    password: '',\n    password2: '',\n    loggedin: false,\n    username: '',\n    errors: {}\n  });\n  const person = useContext(AuthContext.Consumer);\n  console.log(person);\n  const {\n    email,\n    password,\n    errors\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmitManagement = e => {\n    e.preventDefault();\n    let data = {\n      usrEmail: email,\n      usrPassword: password\n    };\n    console.log(data);\n\n    try {\n      Firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n        console.log(response);\n        console.log(\"ook\"); // history.push(\"/home\");\n        // return (<Redirect to=\"/home\" />)\n\n        window.location.href = \"/management\";\n      }); // history.push(\"/home\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let data = {\n      usrEmail: formData.email,\n      usrPassword: formData.password\n    };\n    console.log(data);\n\n    try {\n      Firebase.auth().signInWithEmailAndPassword(formData.email, formData.password).then(response => {\n        console.log(response);\n        console.log(\"ook\"); // history.push(\"/home\");\n        // return (<Redirect to=\"/home\" />)\n\n        window.location.href = \"/home\";\n        formData.loggedin = true;\n        console.log(formData.loggedin);\n      }); // history.push(\"/home\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const signup = e => {\n    e.preventDefault();\n    const details = {\n      email: formData.email,\n      username: formData.username,\n      password1: formData.password,\n      password2: formData.password2,\n      ph_number: formData.contactNumber\n    };\n    console.log(JSON.stringify(details));\n    Firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n      if (user) {\n        console.log(JSON.stringify(user));\n        firedb.collection(\"users\").add(details).then(doc => {\n          console.log(doc.id);\n          alert(\"Account has been created! Please login with your cedentials\");\n        }).catch(err => console.log(\"error adding user to firebase: \", err));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const panes = [{\n    menuItem: 'Sign-In',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginBottom: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, \"Enter your credentials\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => onSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      type: \"email\",\n      label: \"Enter Email Address\",\n      name: \"email\",\n      value: email,\n      onChange: e => onChange(e) // error={errors.email}\n      // helperText={errors.email}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      error: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\",\n      helperText: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\" ? \"Invalid email\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      label: \"Enter Password\",\n      value: password,\n      onChange: e => onChange(e) // error={errors.phone}\n      // helperText={errors.phone}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontWeight: 900,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      fullWidth: true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, \"Log In\"))))))))\n  }, {\n    menuItem: 'Sign-Up',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginBottom: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, \"Sign-Up\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => signup(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      type: \"name\",\n      label: \"Enter Name\",\n      name: \"username\",\n      value: formData.username,\n      onChange: e => onChange(e) // error={errors.email}\n      // helperText={errors.email}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"number\",\n      type: \"number\",\n      label: \"Enter Phone Number\",\n      name: \"contactNumber\",\n      value: formData.contactNumber,\n      onChange: e => onChange(e) // error={errors.email}\n      // helperText={errors.email}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      type: \"email\",\n      label: \"Enter Email Address\",\n      name: \"email\",\n      value: email,\n      onChange: e => onChange(e) // error={errors.email}\n      // helperText={errors.email}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      error: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\",\n      helperText: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\" ? \"Invalid email\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      label: \"Enter Password\",\n      value: password,\n      onChange: e => onChange(e) // error={errors.phone}\n      // helperText={errors.phone}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password2\",\n      type: \"password\",\n      name: \"password2\",\n      label: \"Re-Enter Password\",\n      value: formData.password2,\n      onChange: e => onChange(e) // error={errors.phone}\n      // helperText={errors.phone}\n      ,\n      variant: \"outlined\",\n      fullWidth: true,\n      className: classes.textFields,\n      error: formData.password2 !== formData.password && formData.password2 !== \"\",\n      helperText: formData.password2 !== formData.password && formData.password2 !== \"\" ? \"Passwords do not match\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontWeight: 900,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 37\n      }\n    }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      fullWidth: true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 37\n      }\n    }, \"Submit\")))))))\n  }];\n  console.log(formData.loggedin);\n\n  if (formData.loggedin === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/home',\n        state: {\n          username: formData.username\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 16\n      }\n    }); // <Admindashboard name={formData.username}/>\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Reception,\n      alt: \"overlay\",\n      style: {\n        maxHeight: \"120%\",\n        maxWidth: \"115%\",\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 4,\n      component: Paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontWeight: 800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, \"Online Hotel Reservation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginBottom: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 41\n      }\n    }, \"Enter your details to Log In\")), /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 37\n      }\n    })))))));\n  }\n};","map":{"version":3,"sources":["/home/akhil/hotelreservation/src/components/Landing.js"],"names":["React","Fragment","useState","useContext","useEffect","AuthContext","Link","Redirect","axios","Reception","BackIcon","makeStyles","CssBaseline","Paper","Grid","Box","Typography","Button","Hidden","Container","TextField","Firebase","firedb","Tab","useStyles","theme","root","height","paper","marginTop","spacing","breakpoints","down","display","flexDirection","alignItems","heading","paddingTop","buttons","width","backButton","submitButton","textFields","marginBottom","icons","color","Landing","classes","formData","setFormData","username","contactNumber","email","password","password2","loggedin","errors","person","Consumer","console","log","onChange","e","target","name","value","onSubmitManagement","preventDefault","data","usrEmail","usrPassword","auth","signInWithEmailAndPassword","then","response","window","location","href","error","alert","onSubmit","signup","details","password1","ph_number","JSON","stringify","createUserWithEmailAndPassword","user","collection","add","doc","id","catch","err","panes","menuItem","render","form","test","pathname","state","maxHeight","maxWidth","overflow"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\n// import { Admindashboard } from '../Components/Admindashboard';\nimport { AuthContext } from '../auth/AuthContext'\n\n// Package Imports\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// Icon & Placeholders Imports\nimport Reception from '../placeholders/reception.jpg'\nimport BackIcon from '../placeholders/BackIcon.png';\n\n// Material-UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { Firebase, firedb } from '../firebase'\n\nimport { Tab } from 'semantic-ui-react'\n\n// Styling Landing Page\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    paper: {\n        marginTop: theme.spacing(15),\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing(10),\n        },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    heading: {\n        paddingTop: theme.spacing(3),\n        // paddingBottom: theme.spacing(5),\n    },\n    buttons: {\n        width: '400px',\n    },\n    backButton: {\n        marginTop: theme.spacing(3),\n    },\n    submitButton: {\n        marginTop: theme.spacing(3),\n    },\n    textFields: {\n        marginBottom: theme.spacing(3),\n    },\n    icons: {\n        color: '#fff',\n    },\n}));\n\nexport const Landing = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState({\n        username: '',\n        contactNumber: '',\n        email: '',\n        password: '',\n        password2: '',\n        loggedin: false,\n        username: '',\n        errors: {},\n    });\n\n    \n    const person =  useContext(AuthContext.Consumer)\n    console.log(person)\n\n    const { email, password, errors } = formData;\n\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmitManagement = (e) => {\n        e.preventDefault();\n\n        let data = {\n            usrEmail: email,\n            usrPassword: password,\n        };\n\n        console.log(data);\n        try {\n            Firebase\n                .auth()\n                .signInWithEmailAndPassword(email, password)\n                .then(response => {\n\n                    console.log(response)\n                    console.log(\"ook\")\n                    // history.push(\"/home\");\n                    // return (<Redirect to=\"/home\" />)\n                    window.location.href = \"/management\"\n\n                })\n            // history.push(\"/home\");\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        let data = {\n            usrEmail: formData.email,\n            usrPassword: formData.password,\n        };\n\n        console.log(data);\n        try {\n            Firebase\n                .auth()\n                .signInWithEmailAndPassword(formData.email, formData.password)\n                .then(response => {\n\n                    console.log(response)\n                    console.log(\"ook\")\n                    // history.push(\"/home\");\n                    // return (<Redirect to=\"/home\" />)\n                    window.location.href = \"/home\"\n                    formData.loggedin = true\n                    console.log(formData.loggedin)\n\n                })\n            // history.push(\"/home\");\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const signup = (e) => {\n        e.preventDefault()\n        const details = {\n            email: formData.email,\n            username: formData.username,\n            password1: formData.password,\n            password2: formData.password2,\n            ph_number: formData.contactNumber,\n        };\n        console.log(JSON.stringify(details));\n        Firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                if (user) {\n                    console.log(JSON.stringify(user));\n                    firedb.collection(\"users\")\n                        .add(details)\n                        .then((doc) => {\n                            console.log(doc.id);\n                            alert(\"Account has been created! Please login with your cedentials\")\n                        })\n                        .catch((err) =>\n                            console.log(\"error adding user to firebase: \", err)\n                        );\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const panes = [\n        {\n            menuItem: 'Sign-In', render: () => <Tab.Pane>\n                <div>\n\n                    <Typography\n                        variant='h5'\n                        align='center'\n                        className={classes.heading}\n                        style={{ marginBottom: \"5%\" }}\n                    >\n                        <Box>Enter your credentials</Box>\n                    </Typography>\n                    <Grid container justify='center'>\n                        <Grid item>\n                            <div className={classes.form}>\n                                <form onSubmit={(e) => onSubmit(e)}>\n                                    <TextField\n                                        id='email'\n                                        type='email'\n                                        label='Enter Email Address'\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => onChange(e)}\n                                        // error={errors.email}\n                                        // helperText={errors.email}\n                                        variant='outlined'\n                                        fullWidth\n                                        className={classes.textFields}\n                                        error={\n                                            !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                                email\n                                            ) && email !== \"\"\n                                        }\n                                        helperText={\n                                            !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                                email\n                                            ) && email !== \"\"\n                                                ? \"Invalid email\"\n                                                : \"\"\n                                        }\n                                    />\n                                    <TextField\n                                        id='password'\n                                        type='password'\n                                        name='password'\n                                        label='Enter Password'\n                                        value={password}\n                                        onChange={(e) => onChange(e)}\n                                        // error={errors.phone}\n                                        // helperText={errors.phone}\n                                        variant='outlined'\n                                        fullWidth\n                                        className={classes.textFields}\n                                    />\n\n                                    <Typography align='right'>\n                                        <Box fontWeight={900}>Forgot Password?</Box>\n                                    </Typography>\n\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.submitButton}\n                                        fullWidth\n                                        type='submit'\n                                    >\n                                        <Box fontSize={16}>Log In</Box>\n                                    </Button>\n\n\n                                </form>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Tab.Pane>\n        },\n        {\n            menuItem: 'Sign-Up', render: () => <Tab.Pane>\n                <Typography\n                    variant='h5'\n                    align='center'\n                    className={classes.heading}\n                    style={{ marginBottom: \"5%\" }}\n                >\n                    <Box>Sign-Up</Box>\n                </Typography>\n                <Grid container justify='center'>\n                    <Grid item>\n                        <div className={classes.form}>\n                            <form onSubmit={(e) => signup(e)}>\n                                <TextField\n                                    id='name'\n                                    type='name'\n                                    label='Enter Name'\n                                    name='username'\n                                    value={formData.username}\n                                    onChange={(e) => onChange(e)}\n                                    // error={errors.email}\n                                    // helperText={errors.email}\n                                    variant='outlined'\n                                    fullWidth\n                                    className={classes.textFields}\n\n                                />\n                                <TextField\n                                    id='number'\n                                    type='number'\n                                    label='Enter Phone Number'\n                                    name='contactNumber'\n                                    value={formData.contactNumber}\n                                    onChange={(e) => onChange(e)}\n                                    // error={errors.email}\n                                    // helperText={errors.email}\n                                    variant='outlined'\n                                    fullWidth\n                                    className={classes.textFields}\n\n                                />\n                                <TextField\n                                    id='email'\n                                    type='email'\n                                    label='Enter Email Address'\n                                    name='email'\n                                    value={email}\n                                    onChange={(e) => onChange(e)}\n                                    // error={errors.email}\n                                    // helperText={errors.email}\n                                    variant='outlined'\n                                    fullWidth\n                                    className={classes.textFields}\n                                    error={\n                                        !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                            email\n                                        ) && email !== \"\"\n                                    }\n                                    helperText={\n                                        !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                            email\n                                        ) && email !== \"\"\n                                            ? \"Invalid email\"\n                                            : \"\"\n                                    }\n                                />\n                                <TextField\n                                    id='password'\n                                    type='password'\n                                    name='password'\n                                    label='Enter Password'\n                                    value={password}\n                                    onChange={(e) => onChange(e)}\n                                    // error={errors.phone}\n                                    // helperText={errors.phone}\n                                    variant='outlined'\n                                    fullWidth\n                                    className={classes.textFields}\n                                />\n                                <TextField\n                                    id='password2'\n                                    type='password'\n                                    name='password2'\n                                    label='Re-Enter Password'\n                                    value={formData.password2}\n                                    onChange={(e) => onChange(e)}\n                                    // error={errors.phone}\n                                    // helperText={errors.phone}\n                                    variant='outlined'\n                                    fullWidth\n                                    className={classes.textFields}\n                                    error={formData.password2 !== formData.password && formData.password2 !== \"\"}\n                                    helperText={\n                                        formData.password2 !== formData.password && formData.password2 !== \"\"\n                                            ? \"Passwords do not match\"\n                                            : \"\"\n                                    }\n                                />\n                                <Typography align='right'>\n                                    <Box fontWeight={900}>Forgot Password?</Box>\n                                </Typography>\n\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.submitButton}\n                                    fullWidth\n                                    type='submit'\n                                >\n                                    <Box fontSize={16}>Submit</Box>\n                                </Button>\n                            </form>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Tab.Pane>\n        },\n    ]\n\n    console.log(formData.loggedin)\n\n\n    if (formData.loggedin === true) {\n        return <Redirect\n            to={{\n                pathname: '/home',\n                state: { username: formData.username }\n            }}\n        />\n        // <Admindashboard name={formData.username}/>\n    } else {\n        return (\n            <div>\n                <Grid container component='main' className={classes.root}>\n                    <CssBaseline />\n                    <Hidden smDown>\n                        <Grid\n                            md={8}\n                        >\n                            <img src={Reception} alt='overlay' style={{ maxHeight: \"120%\", maxWidth: \"115%\", overflow: \"hidden\" }} />\n                        </Grid>\n                    </Hidden>\n                    <Grid item xs={12} sm={12} md={4} component={Paper} elevation={6} >\n                        <div className={classes.paper}>\n                            <Typography variant='h3'>\n                                <Box fontWeight={800}>\n                                    Online Hotel Reservation\n              </Box>\n                            </Typography>\n                            <div className={classes.buttons}>\n                                <Fragment>\n                                    <Typography\n                                        variant='h5'\n                                        align='center'\n                                        className={classes.heading}\n                                        style={{ marginBottom: \"3%\" }}\n                                    >\n                                        <Box >Enter your details to Log In</Box>\n                                    </Typography>\n                                    <Container maxWidth='xl'>\n\n\n                                       \n                                        \n\n\n\n\n\n\n                                    </Container>\n\n                                </Fragment>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}