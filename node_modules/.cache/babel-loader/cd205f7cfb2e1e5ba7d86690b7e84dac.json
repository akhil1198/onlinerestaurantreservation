{"ast":null,"code":"var _jsxFileName = \"/home/akhil/hotelreservation/src/components/Landing.js\";\nimport React, { Fragment, useState, useContext } from 'react'; // Package Imports\n\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios'; // Icon & Placeholders Imports\n\nimport Reception from '../placeholders/reception.jpg';\nimport BackIcon from '../placeholders/BackIcon.png'; // Material-UI Imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { Firebase } from '../firebase';\nimport { Tab } from 'semantic-ui-react'; // Styling Landing Page\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: `url(${Face})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover'\n  },\n  paper: {\n    marginTop: theme.spacing(15),\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(10)\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  heading: {\n    paddingTop: theme.spacing(3) // paddingBottom: theme.spacing(5),\n\n  },\n  buttons: {\n    width: '400px'\n  },\n  backButton: {\n    marginTop: theme.spacing(3)\n  },\n  submitButton: {\n    marginTop: theme.spacing(3)\n  },\n  textFields: {\n    marginBottom: theme.spacing(3)\n  },\n  icons: {\n    color: '#fff'\n  }\n}));\nexport const Landing = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n\n  const signup = () => {\n    const details = {\n      email: email,\n      username: username,\n      password1: password,\n      password2: password2,\n      organization: organization,\n      ph_number: contactNumber\n    };\n    console.log(JSON.stringify(details));\n    setLoading(true);\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n      if (user) {\n        console.log(JSON.stringify(user));\n        message = \"Account successfully created\";\n        severity = \"success\";\n        db.collection(\"users\").add(details).then(doc => {\n          console.log(doc.id);\n          setOpen(true);\n          setLoading(false);\n          setTimeout(() => {\n            setUser(user);\n          }, 2000);\n        }).catch(err => console.log(\"error adding user to firebase: \", err));\n      }\n    }).catch(err => {\n      console.log(err);\n      message = err.message;\n      severity = \"error\";\n      setOpen(true);\n      setLoading(false);\n    });\n  };\n\n  const login = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    firebase.auth().signInWithEmailAndPassword(email, password).then(user => console.log(\"signed in user: \", user.user.toJSON())).catch(err => {\n      console.log(err);\n      message = err.message;\n      setOpen(true);\n    });\n  };\n\n  const panes = [{\n    menuItem: 'Sign In',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"Enter your details to Sign In\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/signup\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }, \"Don't have an account? Sign Up\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 10,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      style: {\n        width: \"50%\",\n        borderRadius: 20\n      },\n      onClick: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(Box, {\n      mt: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }))))))\n  }, {\n    menuItem: 'Sign Up',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginBottom: \"3%\",\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"Enter your details to create an account\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"username\",\n      name: \"username\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"UserName\",\n      autoFocus: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      type: \"email\",\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      },\n      error: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\",\n      helperText: !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && email !== \"\" ? \"Invalid email\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"password2\",\n      label: \"Confirm Password\",\n      type: \"password\",\n      id: \"password2\",\n      autoComplete: \"confirm-password\",\n      value: password2,\n      onChange: e => setPassword2(e.target.value),\n      error: password2 !== password && password2 !== \"\",\n      helperText: password2 !== password && password2 !== \"\" ? \"Passwords do not match\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"organization\",\n      name: \"organization\" // required\n      ,\n      id: \"organization\",\n      label: \"Organization\",\n      value: organization,\n      onChange: e => setOrganization(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField // required\n    , {\n      id: \"contact\",\n      label: \"Contact\",\n      name: \"contact\",\n      autoComplete: \"contact number\",\n      value: contactNumber,\n      onChange: e => setContactNumber(e.target.value),\n      error: !/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\",\n      helperText: !/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\" ? \"Invalid contact number\" : contactNumber.length !== 10 && contactNumber !== \"\" ? \"Should consist of 10 digits\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      style: {\n        width: \"50%\",\n        borderRadius: 20\n      },\n      onClick: signup,\n      disabled: password !== password2 && password2 !== \"\" || password.length === 0 || password2.length === 0 || username.length === 0 || email.length === 0 || !/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\" || loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 33\n      }\n    }, loading ? \"Signing Up\" : \"Sign Up\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }))))))\n  }];\n\n  if (formData.loggedin === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/admin/dashboard',\n        state: {\n          username: formData.username\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 16\n      }\n    }); // <Admindashboard name={formData.username}/>\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      className: classes.image,\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Reception,\n      alt: \"Loading\",\n      style: {\n        height: \"100%\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: FaceGenieLogo,\n      alt: \"FaceGenieLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }, \"PPE Management System\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      className: classes.heading,\n      style: {\n        marginBottom: \"3%\",\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      fontWeight: 800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 41\n      }\n    }, \"Please Sign In to continue\")), /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: handleClose,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }, message))));\n  }\n};","map":{"version":3,"sources":["/home/akhil/hotelreservation/src/components/Landing.js"],"names":["React","Fragment","useState","useContext","Link","Redirect","axios","Reception","BackIcon","makeStyles","CssBaseline","Paper","Grid","Box","Typography","Button","Hidden","Container","TextField","Firebase","Tab","useStyles","theme","root","height","image","backgroundImage","Face","backgroundPosition","backgroundRepeat","backgroundSize","paper","marginTop","spacing","breakpoints","down","display","flexDirection","alignItems","heading","paddingTop","buttons","width","backButton","submitButton","textFields","marginBottom","icons","color","Landing","classes","email","setEmail","password","setPassword","user","setUser","open","setOpen","username","setUsername","password2","setPassword2","organization","setOrganization","contactNumber","setContactNumber","signup","details","password1","ph_number","console","log","JSON","stringify","setLoading","firebase","auth","createUserWithEmailAndPassword","then","message","severity","db","collection","add","doc","id","setTimeout","catch","err","login","signInWithEmailAndPassword","toJSON","panes","menuItem","render","form","e","target","value","margin","textAlign","submit","borderRadius","test","length","loading","formData","loggedin","pathname","state","justifyContent","FaceGenieLogo","handleClose"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\n\n// Package Imports\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// Icon & Placeholders Imports\nimport Reception from '../placeholders/reception.jpg';\nimport BackIcon from '../placeholders/BackIcon.png';\n\n// Material-UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { Firebase } from '../firebase'\n\nimport { Tab } from 'semantic-ui-react'\n\n// Styling Landing Page\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: `url(${Face})`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    paper: {\n        marginTop: theme.spacing(15),\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing(10),\n        },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    heading: {\n        paddingTop: theme.spacing(3),\n        // paddingBottom: theme.spacing(5),\n    },\n    buttons: {\n        width: '400px',\n    },\n    backButton: {\n        marginTop: theme.spacing(3),\n    },\n    submitButton: {\n        marginTop: theme.spacing(3),\n    },\n    textFields: {\n        marginBottom: theme.spacing(3),\n    },\n    icons: {\n        color: '#fff',\n    },\n}));\n\nexport const Landing = () => {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [open, setOpen] = useState(false);\n\n\n    const [username, setUsername] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [organization, setOrganization] = useState(\"\");\n    const [contactNumber, setContactNumber] = useState(\"\");\n\n    const signup = () => {\n        const details = {\n            email: email,\n            username: username,\n            password1: password,\n            password2: password2,\n            organization: organization,\n            ph_number: contactNumber,\n        };\n        console.log(JSON.stringify(details));\n        setLoading(true);\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                if (user) {\n                    console.log(JSON.stringify(user));\n                    message = \"Account successfully created\";\n                    severity = \"success\";\n                    db.collection(\"users\")\n                        .add(details)\n                        .then((doc) => {\n                            console.log(doc.id);\n                            setOpen(true);\n                            setLoading(false);\n                            setTimeout(() => {\n                                setUser(user);\n                            }, 2000);\n                        })\n                        .catch((err) =>\n                            console.log(\"error adding user to firebase: \", err)\n                        );\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                message = err.message;\n                severity = \"error\";\n                setOpen(true);\n                setLoading(false);\n            });\n    };\n\n    const login = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((user) => console.log(\"signed in user: \", user.user.toJSON()))\n            .catch((err) => {\n                console.log(err);\n                message = err.message;\n                setOpen(true);\n            });\n    };\n\n    const panes = [\n        {\n            menuItem: 'Sign In', render: () => <Tab.Pane>\n                <div>\n\n                    <Typography\n                        variant='h5'\n                        align='center'\n                        className={classes.heading}\n                        style={{ marginTop: \"3%\" }}\n                    >\n                        <Box>Enter your details to Sign In</Box>\n                    </Typography>\n                    <Grid container justify='center'>\n                        <Grid item>\n                            <form className={classes.form}>\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    type=\"email\"\n                                />\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                />\n\n                                {/* <div className=\"separator\">OR</div> */}\n                                <Grid container style={{ marginTop: \"3%\" }}>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/signup\" variant=\"body2\">\n                                            {\"Don't have an account? Sign Up\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <div style={{ margin: 10, textAlign: \"center\" }}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        style={{ width: \"50%\", borderRadius: 20 }}\n                                        onClick={login}\n                                    >\n                                        Sign In\n              </Button>\n                                </div>\n                                <Box mt={5}>\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Tab.Pane>\n        },\n        {\n            menuItem: 'Sign Up', render: () => <Tab.Pane>\n                <Typography\n                    variant='h5'\n                    align='center'\n                    className={classes.heading}\n                    style={{ marginBottom: \"3%\", marginTop: \"3%\" }}\n                >\n                    <Box>Enter your details to create an account</Box>\n                </Typography>\n                <Grid container justify='center'>\n                    <Grid item>\n                        <form className={classes.form} noValidate>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete=\"username\"\n                                        name=\"username\"\n                                        required\n                                        fullWidth\n                                        id=\"username\"\n                                        label=\"UserName\"\n                                        autoFocus\n                                        value={username}\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        type=\"email\"\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        value={email}\n                                        onChange={(e) => {\n                                            setEmail(e.target.value);\n                                        }}\n                                        error={\n                                            !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                                email\n                                            ) && email !== \"\"\n                                        }\n                                        helperText={\n                                            !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n                                                email\n                                            ) && email !== \"\"\n                                                ? \"Invalid email\"\n                                                : \"\"\n                                        }\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        name=\"password2\"\n                                        label=\"Confirm Password\"\n                                        type=\"password\"\n                                        id=\"password2\"\n                                        autoComplete=\"confirm-password\"\n                                        value={password2}\n                                        onChange={(e) => setPassword2(e.target.value)}\n                                        error={password2 !== password && password2 !== \"\"}\n                                        helperText={\n                                            password2 !== password && password2 !== \"\"\n                                                ? \"Passwords do not match\"\n                                                : \"\"\n                                        }\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        autoComplete=\"organization\"\n                                        name=\"organization\"\n                                        // required\n                                        id=\"organization\"\n                                        label=\"Organization\"\n                                        value={organization}\n                                        onChange={(e) => setOrganization(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        // required\n                                        id=\"contact\"\n                                        label=\"Contact\"\n                                        name=\"contact\"\n                                        autoComplete=\"contact number\"\n                                        value={contactNumber}\n                                        onChange={(e) => setContactNumber(e.target.value)}\n                                        error={\n                                            !/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\"\n                                        }\n                                        helperText={\n                                            !/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\"\n                                                ? \"Invalid contact number\"\n                                                : contactNumber.length !== 10 && contactNumber !== \"\"\n                                                    ? \"Should consist of 10 digits\"\n                                                    : \"\"\n                                        }\n                                    />\n                                </Grid>\n                            </Grid>\n                            <div style={{ textAlign: \"center\", marginTop: 10 }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    style={{ width: \"50%\", borderRadius: 20 }}\n                                    onClick={signup}\n                                    disabled={\n                                        (password !== password2 && password2 !== \"\") ||\n                                        password.length === 0 ||\n                                        password2.length === 0 ||\n                                        username.length === 0 ||\n                                        email.length === 0 ||\n                                        (!/^[0-9]+$/.test(contactNumber) && contactNumber !== \"\") ||\n                                        loading\n                                    }\n                                >\n                                    {loading ? \"Signing Up\" : \"Sign Up\"}\n                                </Button>\n                            </div>\n                            <Grid container justify=\"flex-end\">\n                                <Grid item>\n                                    {/* <Link href=\"/\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link> */}\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Tab.Pane>\n        },\n    ]\n\n    if (formData.loggedin === true) {\n        return <Redirect\n            to={{\n                pathname: '/admin/dashboard',\n                state: { username: formData.username }\n            }}\n        />\n        // <Admindashboard name={formData.username}/>\n    } else {\n        return (\n            <div>\n                <Grid container component=\"main\" className={classes.root}>\n                    <CssBaseline />\n                    <Grid\n                        item\n                        xs={false}\n                        sm={4}\n                        md={7}\n                        className={classes.image}\n                        style={{\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            display: \"flex\",\n                        }}\n                    >\n                        <img\n                            src={Reception}\n                            alt=\"Loading\"\n                            style={{ height: \"100%\", margin: \"auto\" }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                        {/* <div className={classes.paper}>\n            <img\n              src={ResoluteAILogo}\n              alt=\"loading\"\n              style={{ width: \"80%\", height: \"50%\", marginBottom: 20 }}\n              className=\"w3-animate-zoom\"\n            />\n            <h2 style={{ color: \"#505050\" }}>Welcome to PPE Client</h2>\n            \n          </div> */}\n                        <div className={classes.paper}>\n                            <img src={FaceGenieLogo} alt='FaceGenieLogo' />\n                            <Typography variant='h5'>\n                                <Box>\n                                    PPE Management System\n              </Box>\n                            </Typography>\n                            <div className={classes.buttons}>\n                                <Fragment>\n                                    {/* <Link to='/'>\n                  <Button\n                    startIcon={<img src={BackIcon} />}\n                    className={classes.backButton}\n                  >\n                    Go Back\n                    </Button>\n                </Link> */}\n                                    <Typography\n                                        variant='h5'\n                                        align='center'\n                                        className={classes.heading}\n                                        style={{ marginBottom: \"3%\", marginTop: \"5%\" }}\n                                    >\n                                        <Box fontWeight={800}>Please Sign In to continue</Box>\n                                    </Typography>\n                                    <Container maxWidth='xl'>\n\n\n                                        <Tab panes={panes} />\n\n\n\n\n                                    </Container>\n                                    {/* <div style={{ marginTop: \"20%\"}}>\n                  <Copyright />\n                </div> */}\n\n                                    {/* <Typography style={{ marginTop: '4%', marginLeft: '10%' }}>\n                  <Box>\n                    Don't have an account?{' '}\n                    <Link to='/signup' style={{ color: 'red' }}>\n                      Click here\n                      </Link>{' '}\n                      to Sign Up{' '}\n                  </Box>\n                </Typography> */}\n                                </Fragment>\n\n                            </div>\n                        </div>\n                    </Grid>\n                    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                        <Alert onClose={handleClose} severity=\"error\">\n                            {message}\n                        </Alert>\n                    </Snackbar>\n                </Grid>\n            </div>\n\n\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}