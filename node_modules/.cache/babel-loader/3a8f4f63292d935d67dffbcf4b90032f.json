{"ast":null,"code":"var _jsxFileName = \"/home/akhil/hotelreservation/src/components/signup.js\";\nimport React, { useState, useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Firebase } from \"../firebase\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { Form, Button, Container, Row, Col, ButtonGroup, ToggleButton } from 'react-bootstrap';\nvar email;\nvar password;\n\nconst SignUp = ({\n  history\n}) => {\n  const [loggedin, setLoggedin] = useState(false); // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n\n  const handleSignUp = useCallback(async event => {\n    console.log(email);\n    console.log(password);\n    event.preventDefault();\n\n    try {\n      await Firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n        console.log(response);\n        console.log(\"ook\");\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        });\n      });\n      history.push(\"/home\");\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    style: {\n      marginTop: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: event => {\n      email = event.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: event => {\n      password = event.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    size: \"lg\",\n    onClick: handleSignUp,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"));\n};\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/home/akhil/hotelreservation/src/components/signup.js"],"names":["React","useState","useCallback","useContext","withRouter","Redirect","Firebase","AuthContext","Form","Button","Container","Row","Col","ButtonGroup","ToggleButton","email","password","SignUp","history","loggedin","setLoggedin","handleSignUp","event","console","log","preventDefault","auth","createUserWithEmailAndPassword","then","response","push","error","alert","marginTop","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Firebase } from \"../firebase\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { Form, Button, Container, Row, Col, ButtonGroup, ToggleButton } from 'react-bootstrap'\n\nvar email\nvar password\n\nconst SignUp = ({ history }) => {\n    const [loggedin, setLoggedin] = useState(false)\n    // const [email, setEmail] = useState('')\n    // const [password, setPassword] = useState('')\n\n\n\n    const handleSignUp = useCallback(async event => {\n        console.log(email)\n        console.log(password)\n        event.preventDefault();\n        try {\n            await Firebase\n                .auth()\n                .createUserWithEmailAndPassword(email, password)\n                .then(response => {\n\n                    console.log(response)\n                    console.log(\"ook\")\n\n                    return (<Redirect to=\"/home\" />)\n                })\n            history.push(\"/home\");\n        } catch (error) {\n            alert(error);\n        }\n    }, [history]);\n\n\n\n\n    return (\n        <div>\n            <Form.Group controlId=\"formBasicEmail\" style={{ marginTop: \"3%\" }}>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(event) => {\n                    email = event.target.value\n                }} />\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(event) => {\n                    password = event.target.value\n                }} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" onClick={handleSignUp} block>\n                Sign Up\n            </Button>\n        </div>\n    );\n};\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}